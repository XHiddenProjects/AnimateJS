const AnimateJS=class{constructor(){this.ANIMATION_INFINITE=-1;this.EASE='ease';this.LINEAR="linear";this.EASE_IN="ease-in";this.EASE_OUT="ease-out"
this.EASE_IN_OUT="ease-in-out";this.CUBIC_BEZIER=function(x1,y1,x2,y2){if(arguments.length<4)throw new Error('Must have four parameters.');return `cubic-bezier(${x1},${y1},${x2},${y2})`}
this.NORMAL="normal";this.REVERSE="reverse";this.ALT="alternate";this.ALT_REVERSE="alternate-reverse";this.NONE="none";this.FORWARDS="forwards";this.BACKWARDS="backwards";this.BOTH="both";this.SUPER_SLOW=5000;this.SLOW=3000;this.MODERATE=1000;this.FAST=500;this.SUPER_FAST=200;this.RED="#ff0000";this.BROWN="#a52a2a";this.TAN="#d2b48c";this.ORANGE="#ffa500";this.YELLOW="#ffff00";this.GOLD="#ffd700";this.GREEN="#008000";this.LIME="#00ff00";this.BLUE="#0000ff";this.CYAN="#00ffff";this.NAVY="#000080";this.PURPLE="#800080";this.MAGENTA="#ff00ff";this.GRAY="#808080";this.LIGHT_GRAY="#d3d3d3";this.PINK="#ffc0cb";this.BLACK="#000";this.WHITE="#FFF";this.OPACITY=1;this.OPACITY_HALF=0.5;this.NO_OPACITY=0;this.Utils={inView:(el)=>{const rect=el.getBoundingClientRect(),windowHeight=window.innerHeight||document.documentElement.clientHeight,windowWidth=window.innerWidth||document.documentElement.clientWidth,inVerticalView=rect.top<windowHeight&&rect.bottom>0,inHorizontalView=rect.left<windowWidth&&rect.right>0;return inVerticalView&&inHorizontalView},$:(el)=>document.querySelectorAll(el),$$:(el)=>document.querySelector(el),Merger:(el,animation)=>{const currentAnimations=el.style.animation?el.style.animation.split(',').map(anim=>anim.trim()):[];if(!currentAnimations.includes(animation)){el.style.animation=currentAnimations.length?`${el.style.animation}, ${animation}`:animation}},contrast:(color1,color2)=>{const hex2rgb=(hex)=>{hex=hex.replace(/^#/,'');if(hex.length===3)hex=hex.split('').map(c=>c+c).join('');const bigint=parseInt(hex,16);const r=(bigint>>16)&255;const g=(bigint>>8)&255;const b=bigint&255;return{r,g,b}},getLuminance=({r,g,b})=>{const srgb=[r,g,b].map(c=>{c/=255;return c<=0.03928?c/12.92:Math.pow((c+0.055)/1.055,2.4)});return 0.2126*srgb[0]+0.7152*srgb[1]+0.0722*srgb[2]},lum1=getLuminance(hex2rgb(color1)),lum2=getLuminance(hex2rgb(color2)),brightest=Math.max(lum1,lum2),darkest=Math.min(lum1,lum2);return parseFloat(((brightest+0.05)/(darkest+0.05)).toFixed(2))}};this.Animations={fade:{in:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`fadeIn ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},out:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`fadeOut ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},inLeft:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`fadeInLeft ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},outLeft:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`fadeOutLeft ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},inRight:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`fadeInRight ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},outRight:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`fadeOutRight ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},inTop:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`fadeInTop ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},outTop:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`fadeOutTop ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},inBottom:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`fadeInBottom ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},outBottom:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`fadeOutBottom ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr}},slide:{inTop:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`slideInTop ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},outTop:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`slideOutTop ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},inBottom:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`slideInBottom ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},outBottom:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`slideOutBottom ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},inLeft:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`slideInLeft ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},outLeft:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`slideOutLeft ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},inRight:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`slideInRight ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},outRight:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`slideOutRight ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr}},rotate:{in:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`rotateIn ${duration}ms ${timing} ${delay}ms ${count} ${direction}  ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},out:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`rotateOut ${duration}ms ${timing} ${delay}ms ${count} ${direction}  ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},clockwise:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`rotateClockwise ${duration}ms ${timing} ${delay}ms ${count} ${direction}  ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},counterClockwise:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`rotateCounterClockwise ${duration}ms ${timing} ${delay}ms ${count} ${direction}  ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr}},zoom:{in:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`zoomIn ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},out:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`zoomOut ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr}},bounce:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`bounce ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},stretch:{width:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`stretchWidth ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr},height:(el,timing='ease',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animStr=`stretchHeight ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animStr);else el.style.animation=animStr}}};if(!this.Utils.$$('#animateJS-animations')){const css=document.createElement('style');css.id='animateJS-animations';document.head.appendChild(css)}}
animate(el,animationPath,options={}){const{timing='linear',duration=this.MODERATE,delay=0,count=1,direction='normal',mode='forwards',merge=!1}=options;const parts=animationPath.split('.');let current=this.Animations;for(let i=0;i<parts.length;i++){if(current[parts[i]]!==undefined){current=current[parts[i]]}else{console.error('Animation not found:',animationPath);return Promise.resolve()}}
if(typeof current!=='function'){console.error('Animation is not a function:',animationPath);return Promise.resolve()}
current(el,timing,duration,delay,(count===this.ANIMATION_INFINITE?'infinite':count),direction,mode,merge);return new Promise((resolve)=>{if(count===this.ANIMATION_INFINITE){resolve()}else{const handler=()=>{el.removeEventListener('animationend',handler);resolve()};el.addEventListener('animationend',handler)}})}
scroll(el,callback){el.addEventListener('scroll',()=>callback(this,el));return this}
load(el,callback){el.addEventListener('load',()=>callback(this,el));return this}
hover(el,start,end=(a,e)=>{e.style.animation=''}){el.addEventListener('mouseenter',()=>start(this,el));el.addEventListener('touchstart',()=>start(this,el));el.addEventListener('mouseleave',()=>end(this,el));el.addEventListener('touchend',()=>end(this,el));return this}
click(el,callback){el.addEventListener('click',()=>callback(this,el));return this}
init(el,styles={}){const styleString=Object.entries(styles).map(([key,value])=>`${key}: ${value}`).join('; ');el.setAttribute('style',styleString);return this}
wait(callback,ms=1000){setTimeout(callback,ms);return this}
add(animation){if(!(animation instanceof AnimationJS))
throw new Error('Must be an instance of AnimationJS');if(!animation.callback)throw new Error(`${animation.path} hasn't been developed. You must use develop() method`);const parts=animation.path.split('.');let current=this.Animations;for(let i=0;i<parts.length;i++){const part=parts[i];if(i===parts.length-1){current[part]=animation.callback}else{if(current[part]!==undefined){current=current[part]}else{current[part]={};current=current[part]}}}
if(animation.css){const styleEl=this.Utils.$$('#animateJS-animations');if(styleEl){styleEl.innerHTML+=animation.css}}
return this}
async run(...animations){for(const animation of animations){if(typeof animation==='function'){await animation()}else if(animation instanceof Promise){await animation}else{console.warn('Animation must be a function or promise:',animation)}}}};const AnimationJS=class{#begin;#keyframes;#end;constructor(...path){this.path=path.join('.')??'';this.name=`${this.#firstIndex(path)}_${this.#lastIndex(path)}`;this.#begin=`@keyframes ${this.name}{`;this.#keyframes='';this.#end=`}`;this.css='';this.callback=null;this.Utils={Merger:(el,animation)=>{el.style.animation=el.style.animation?`${el.style.animation}, ${animation}`:animation}}}
#lastIndex(array){return array[array.length-1]}
#firstIndex(array){return array[0]}
createTimeline(frame,...keyframes){this.#keyframes+=`${frame.match(/\d+/) ? `${frame}%` : frame}{`;keyframes.forEach((kf)=>{if(!(kf instanceof KeyFrames))throw new Error('Must be a keyframe object');this.#keyframes+=kf.finalize()});this.#keyframes+=`}`;this.css=`${this.#begin}${this.#keyframes}${this.#end}`;return this}
develop(){this.callback=(el,timing='ease',duration=3000,delay=0,count=1,direction='normal',mode='none',merge=!1)=>{const animation=`${this.name} ${duration}ms ${timing} ${delay}ms ${count} ${direction} ${mode}`;if(merge)this.Utils.Merger(el,animation);else el.style.animation=animation};return this}}
class KeyFrames{constructor(){this.css='';this.transforms=[];this.boxShadows=[];this.backgrounds=[];this.transitions=[];this.borders={};this.fontShadows=[];this.colors='';this.opacities=1}
rotate(degree){this.transforms.push(`rotate(${degree}deg)`);return this}
rotateX(degree){this.transforms.push(`rotateX(${degree}deg)`);return this}
rotateY(degree){this.transforms.push(`rotateY(${degree}deg)`);return this}
rotateZ(degree){this.transforms.push(`rotateZ(${degree}deg)`);return this}
scale(sx,sy){if(sy===undefined){this.transforms.push(`scale(${sx})`)}else{this.transforms.push(`scale(${sx}, ${sy})`)}
return this}
scale3D(sx,sy,sz){this.transforms.push(`scale3d(${sx}, ${sy}, ${sz})`);return this}
scaleX(sx){this.transforms.push(`scaleX(${sx})`);return this}
scaleY(sy){this.transforms.push(`scaleY(${sy})`);return this}
scaleZ(sz){this.transforms.push(`scaleZ(${sz})`);return this}
translate(x,y){this.transforms.push(`translate(${x}px, ${y}px)`);return this}
translateX(x){this.transforms.push(`translateX(${x}px)`);return this}
translateY(y){this.transforms.push(`translateY(${y}px)`);return this}
perspective(distance){this.transforms.push(`perspective(${distance}px)`);return this}
matrix(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){this.transforms.push(`matrix(${a}, ${b}, ${c}, ${d}, ${e}, ${f}, ${g}, ${h}, ${i}, ${j}, ${k}, ${l}, ${m}, ${n}, ${o}, ${p})`);return this}
matrix3D(a1,b1,c1,d1,a2,b2,c2,d2,a3,b3,c3,d3,a4,b4,c4,d4){this.transforms.push(`matrix3d(${a1}, ${b1}, ${c1}, ${d1}, ${a2}, ${b2}, ${c2}, ${d2}, ${a3}, ${b3}, ${c3}, ${d3}, ${a4}, ${b4}, ${c4}, ${d4})`);return this}
rotate3D(x,y,z,deg){this.transforms.push(`rotate3d(${x}, ${y}, ${z}, ${deg}deg)`);return this}
skew(xDeg,yDeg){this.transforms.push(`skew(${xDeg}deg, ${yDeg}deg)`);return this}
skewX(xDeg){this.transforms.push(`skewX(${xDeg}deg)`);return this}
skewY(yDeg){this.transforms.push(`skewY(${yDeg}deg)`);return this}
boxShadow(...shadows){this.boxShadows.push(...shadows);return this}
background(...backgrounds){this.backgrounds.push(...backgrounds);return this}
transition(...transitions){this.transitions.push(...transitions);return this}
border(width,style,color,...locations){if(locations.length===0){this.borders.border=`${width}px ${style} ${color}`}else{for(const loc of locations){switch(loc.toLowerCase()){case 'top':this.borders['border-top']=`${width}px ${style} ${color}`;break;case 'right':this.borders['border-right']=`${width}px ${style} ${color}`;break;case 'bottom':this.borders['border-bottom']=`${width}px ${style} ${color}`;break;case 'left':this.borders['border-left']=`${width}px ${style} ${color}`;break}}}
return this}
fontShadow(...shadows){shadows.forEach(s=>{this.fontShadows.push(`${s.h}px ${s.v}px ${s.blur}px ${s.color}`)});return this}
color(color){this.colors=color;return this}
opacity(value){value=parseFloat(value);this.opacities=value>1?1:(value<0?0:value);return this}
finalize(){const styles=[];if(this.transforms.length>0)styles.push(`transform: ${this.transforms.join(' ')};`);if(this.boxShadows.length>0)styles.push(`box-shadow: ${this.boxShadows.join(', ')};`);if(this.backgrounds.length>0)styles.push(`background: ${this.backgrounds.join(', ')};`);if(this.transitions.length>0)styles.push(`transition: ${this.transitions.join(', ')};`);for(const[key,value]of Object.entries(this.borders)){styles.push(`${key}: ${value};`)}
if(this.fontShadows.length>0)styles.push(`text-shadow: ${this.fontShadows.join(', ')};`);if(!this.#isNull(this.colors))styles.push(`color: ${this.colors};`);if(this.opacities>=0)styles.push(`opacity: ${this.opacities};`);this.css=styles.join(' ');return this.css}
#isNull(str){return!str||str===''}
clear(){this.css='';this.transforms=[];this.boxShadows=[];this.backgrounds=[];this.transitions=[];this.borders={};this.fontShadows=[];this.colors='';this.opacities=1;return this}}
